plugins {
    id 'java'
    id 'jvm-test-suite'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.2-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Задачи тестирования (https://docs.gradle.org/8.2/userguide/jvm_test_suite_plugin.html)
testing {
    suites {

        // общие настройки
        configureEach {
            targets {
                all {
                    testTask.configure {
                        // подробный вывод по выполнявшимся тестам в консоль
                        testLogging {
                            //events "passed", "skipped", "failed", "standardOut", "standardError"
                            events "passed", "failed", "standardOut", "standardError"
                        }
                    }
                }
            }
        }

        // Unit-тесты
        test {
            useJUnitJupiter()
        }

        // Интеграционные тесты
        integrationTest(JvmTestSuite) {
            // в отличие от test зависимости не наследуются из проекта, нужно добавлять явно
            dependencies {
                implementation project()
                implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
                implementation 'org.springframework.boot:spring-boot-starter-web'
                implementation 'org.springframework.boot:spring-boot-starter-test'
            }
            targets {
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                        // всегда выполняем (даже после успешного предыдущего выполнения)
                        getOutputs().upToDateWhen { false }
                    }
                }
            }
        }
    }
}

// добавляется общая задача check
tasks.named('check') {
    dependsOn(testing.suites.integrationTest)
}
